/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3-rc-1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    google()
    maven{
        url 'https://firebase.googleapis.com/maven'
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.google.firebase:firebase-admin:9.4.1' // Check for the latest version
     implementation 'com.google.cloud:google-cloud-firestore:3.5.0'  // Firestore SDK (includes ApiFuture)
    implementation 'com.google.cloud:google-cloud-storage:2.5.1' // Optional: If using Google Cloud Storage


    // SLF4J API
    implementation 'org.slf4j:slf4j-api:2.0.0'  // or the latest version

    // Logback Classic (the actual logging implementation)
    implementation 'ch.qos.logback:logback-classic:1.4.5'  // or the latest version

    // Logback Core (required by Logback)
    implementation 'ch.qos.logback:logback-core:1.4.5'  // or the latest version

}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(20)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'SENDS.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

apply plugin: 'com.google.gms.google-services'  // Firebase plugin for Android